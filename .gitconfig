[include]
	path = ~/.gitconfig.local
[color]
	status      = auto
	diff        = auto
	branch      = auto
	interactive = auto
	grep        = auto
	ui          = auto
[alias]
	ap = add -p
	b  = branch
	d  = diff
	dc = diff --cached
	ch = checkout
	co = commit
	coa = commit --amend --date=now  # https://amaya382.hatenablog.jp/entry/2017/03/27/220000
	s  = status
	sw = switch
	re = restore
	us = restore --staged
	pl = pull
	pu = push
	puf = push --force-with-lease --force-if-includes
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	lga = log --graph --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	rb = rebase
	rbia = rebase --interactive --autosquash
	rbc = rebase --committer-date-is-author-date
	su = submodule
	cp = cherry-pick
	# https://stackoverflow.com/questions/6127328/how-do-i-delete-all-git-branches-which-have-been-merged
	cleanup = "!git branch --merged | egrep -v '^\\*|master|main' | xargs -n 1 -r git branch -d"
	# https://stackoverflow.com/a/18143078
	cleanup-remote = "!git branch -r --merged | egrep -v '^\\*|master|main' | sed 's/origin\\///' | xargs -n 1 git push --delete origin"
	merge-dryrun = merge --no-commit --no-ff
	# https://qiita.com/Yinaura/items/30992f25b87f76af3ba2
	force-pull = !git fetch && git reset --hard origin/$(git current-branch)
[core]
	excludesfile = ~/.gitignore
	pager = git-split-diffs --color | less -RFX
	quotepath = false
	ignorecase = false
	autocrlf = input
[commit]
	template = ~/.commit_template
[merge]
	ff = false
	conflictStyle = zdiff3
[pull]
	ff = only
[init]
	defaultBranch = main
[push]
	autoSetupRemote = true
